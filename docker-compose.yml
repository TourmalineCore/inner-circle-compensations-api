services:
  compensations-db:
    container_name: 'compensations-db'
    image: postgres:14.2-alpine
    profiles: ['MockForDevelopment', 'db-only', 'MockForPullRequest']
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: compensations-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 10005:5432
    networks:
      - compensations-network

  compensations-api:
    profiles: ['default']
    container_name: 'compensations-api'
    build:
      context: .
      dockerfile: Api/Dockerfile
    ports:
      - 10006:80
    depends_on:
      compensations-db:
        condition: service_healthy
    networks:
      - compensations-network

  compensations-api-for-e2e:
    container_name: 'compensations-api-for-e2e'
    profiles: ['MockForPullRequest']
    extends:
      service: compensations-api
    environment:
      - ASPNETCORE_ENVIRONMENT=MockForPullRequest
      - ASPNETCORE_HTTP_PORTS=80
  
  compensations-api-for-docker-run:
    container_name: 'compensations-api-for-docker-run'
    profiles: ['MockForDevelopment']
    extends:
      service: compensations-api
    environment:
      - ASPNETCORE_ENVIRONMENT=MockForDevelopment

  mockServer:
    container_name: 'mockServer'
    profiles: ['MockForPullRequest']
    image: mockserver/mockserver:5.15.0
    command: -logLevel INFO
    ports:
      - 1080:1080
    volumes:
      - ./initializer.json:/config/initializer.json
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/initializer.json
    networks:
      - compensations-network

  karate-tests:
    container_name: 'karate-tests'
    profiles: ['MockForPullRequest']
    build:
      dockerfile: KarateDockerfile
      context: .
    depends_on:
      - compensations-api-for-e2e
      - mockServer
    command: ["karate", "/karate"]
    volumes:
      - .:/karate
    environment:
      AUTH_API_ROOT_URL: "http://mockServer:1080"
      API_ROOT_URL: "http://compensations-api-for-e2e"
      SHOULD_USE_FAKE_EXTERNAL_DEPENDENCIES: "true"
    networks:
      - compensations-network

  production-karate-tests:
    container_name: 'production-karate-tests'
    profiles: ['production-e2e-tests']
    build:
      dockerfile: KarateDockerfile
      context: .
    command: ["karate", "/karate"]
    volumes:
      - .:/karate
    environment:
      AUTH_API_ROOT_URL: "https://innercircle.tourmalinecore.com"
      API_ROOT_URL: "https://innercircle.tourmalinecore.com"
      SHOULD_USE_FAKE_EXTERNAL_DEPENDENCIES: "false"
      AUTH_LOGIN: ${AUTH_LOGIN}
      AUTH_PASSWORD: ${AUTH_PASSWORD}

networks:
  compensations-network: {}
  ic-backend-deb:
    external: true
